name: Poll GitHub Security Alerts

on:
  schedule:
    - cron: '0 * * * *'  # Every hour
  workflow_dispatch:

permissions:
  contents: read
  security-events: read
  issues: write

jobs:
  poll-alerts:
    runs-on: ubuntu-latest

    steps:
      - name: Install GitHub CLI and jq
        run: |
          sudo apt update
          sudo apt install gh jq -y

      - name: Poll Dependabot Alerts
        env:
          GH_TOKEN: ${{ secrets.GITHUBTOKEN }}
        run: |
          gh api -H "Accept: application/vnd.github+json" /repos/${{ github.repository }}/dependabot/alerts |
          jq -c '.[]' |
          while read -r alert; do
            severity=$(echo "$alert" | jq -r '.security_advisory.severity')
            package=$(echo "$alert" | jq -r '.security_vulnerability.package.name')
            identifier=$(echo "$alert" | jq -r '.security_advisory.identifier')
            summary=$(echo "$alert" | jq -r '.security_advisory.summary')
            html_url=$(echo "$alert" | jq -r '.html_url')

            title="Dependabot: $package ($identifier)"
            exists=$(gh issue list --label security-alert --state open --search "$package" --json title | jq '.[0].title')

            if [[ "$exists" == "null" ]]; then
              gh issue create --title "$title" --body "**Summary:** $summary\n\n**Severity:** $severity\n\n**Details:** $html_url" --label "security-alert"
            fi
          done

      - name: Poll CodeQL Alerts
        env:
          GH_TOKEN: ${{ secrets.GITHUBTOKEN }}
        run: |
          gh api -H "Accept: application/vnd.github+json" /repos/${{ github.repository }}/code-scanning/alerts |
          jq -c '.[]' |
          while read -r alert; do
            rule_id=$(echo "$alert" | jq -r '.rule.id')
            severity=$(echo "$alert" | jq -r '.rule.severity')
            html_url=$(echo "$alert" | jq -r '.html_url')

            title="CodeQL: $rule_id"
            exists=$(gh issue list --label security-alert --state open --search "$rule_id" --json title | jq '.[0].title')

            if [[ "$exists" == "null" ]]; then
              gh issue create --title "$title" --body "**Rule:** $rule_id\n\n**Severity:** $severity\n\n**Details:** $html_url" --label "security-alert"
            fi
          done

      - name: Poll Secret Scanning Alerts
        env:
          GH_TOKEN: ${{ secrets.GITHUBTOKEN }}
        run: |
          gh api -H "Accept: application/vnd.github+json" /repos/${{ github.repository }}/secret-scanning/alerts |
          jq -c '.[]' |
          while read -r alert; do
            secret_type=$(echo "$alert" | jq -r '.secret_type_display_name')
            html_url=$(echo "$alert" | jq -r '.html_url')

            title="Secret Leak: $secret_type"
            exists=$(gh issue list --label security-alert --state open --search "$secret_type" --json title | jq '.[0].title')

            if [[ "$exists" == "null" ]]; then
              gh issue create --title "$title" --body "**Type:** $secret_type\n\n**Details:** $html_url" --label "security-alert"
            fi
          done

